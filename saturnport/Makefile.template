#
#   SEGA SATURN Graphic library make file for GNU
# Modified May 4 2003 by Ex-Cyber

# Uncomment the GNUTARGET definition that matches your toolchain.

# sh-coff: For e.g. KPIT's GNUSH COFF toolchain.
# sh-elf: For e.g. a preexisting Dreamcast toolchain.

#GNUTARGET = sh-coff-
GNUTARGET = sh-elf-

CC = $(GNUTARGET)gcc
CXX = $(GNUTARGET)g++
LD = $(GNUTARGET)ld
CONV = $(GNUTARGET)objcopy


# The command to use for deleting files/directories.
RM = rm -R
#RM = deltree
#RM = del /s

SGLDIR = C:/SaturnOrbit/SGL_302j
SGLIDR = $(SGLDIR)/inc

#DEVKIT = /home/nightshade/SATURN/SH-COFF

#SGLDIR = $(DEVKIT)/sgl
#SGLIDR = $(SGLDIR)/inc
SGLLDR = C:/vbt/saturn/SBL6/SEGALIB/LIB/vbtelf4

SBLDIR = C:/vbt/saturn/SBL6/SEGALIB
SBLIDR = $(SBLDIR)/INCLUDE
SBLLDR = $(SBLDIR)/lib

OBJECTS = ./objects

# -D_PAR_UPLOAD_ to enable cdunlock needed when uploading the sw through PAR
# -D_352_CLOCK_ Enables 352xYYY resolution to set saturn clock speed to 28mhz, graphic stretching
# might cause some artifacts
# option
CCFLAGS  = -fpermissive-fno-lto -D_SATURNPORT_ -DSYS_BIG_ENDIAN -DBYPASS_PROTECTION -Os -fno-rtti -fno-exceptions -nostdlib -m2 -c -I$(DEVKIT)/tooldir/include -I$(SRCDIR) -I$(SGLIDR) -I$(SBLIDR) -IC:/vbt/saturn/vbtsh10/toolchain/sh-elf/include -nostdlib
CXXFLAGS = -fno-lto -D_SATURNPORT_ -DSYS_BIG_ENDIAN -DBYPASS_PROTECTION -Os -fno-rtti -fno-exceptions -nostdlib -m2 -c -I$(DEVKIT)/tooldir/include -I$(SRCDIR) -I$(SGLIDR) -I$(SBLIDR) -IC:/vbt/saturn/vbtsh10/toolchain/sh-elf/include -nostdlib

# -m2 must be specified in LDFLAGS so the linker will search the SH2 lib dirs
# Specify path of libsgl.a by using "-L" option

# Sega's ld might not understand the --format command used here...

LDFLAGS = -m2 -fpermissive -L$(SGLLDR) -L$(SBLLDR) -Xlinker --strip-debug -Xlinker -T$(LDFILE) -Xlinker -Map \
          -Xlinker $(MPFILE) -Xlinker -e -Xlinker ___Start -nostartfiles -fno-builtin 
DFLAGS =
# source_program
include $(OBJECTS)

TARGET   = sl.elf
TARGET1  = ../root/sl.bin
LDFILE	 = $(CMNDIR)/saturn.lnk
MPFILE   = $(TARGET:.elf=.map)
MAKEFILE = Makefile

all: $(TARGET) $(TARGET1)

# Use gcc to link so it will automagically find correct libs directory

$(TARGET) : $(SYSOBJS) $(OBJS) $(MAKEFILE) $(OBJECTS) $(LDFILE)
	$(CXX) $(LDFLAGS) $(SYSOBJS) $(OBJS) $(LIBS) -o $@

$(TARGET1) : $(SYSOBJS) $(OBJS) $(MAKEFILE) $(LDFILE)
	$(CONV) -O binary $(TARGET) $(TARGET1)

# Redundant linker script was here

# suffix
.SUFFIXES: .asm

.c.o:
ifndef GNUTARGET
	@echo "You need to define GNUTARGET in Makefile.template."
	@false
endif

ifndef SGLDIR
	@echo "You need to define SGLDIR in Makefile.template."
	@false
endif
	$(CXX) $< $(DFLAGS) $(CXXFLAGS) -o $@

clean:
	$(RM) $(OBJS) $(TARGET:.elf=.*)
